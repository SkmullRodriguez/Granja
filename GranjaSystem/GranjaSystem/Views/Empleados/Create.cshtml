@model GranjaSystem.Models.tblEmpleados

@{
    ViewBag.Title = "Agregar";
}

    <div class="row content container-fluid">
        <div class="panel panel-primary">
            <div class="panel-heading text-center"><h4>CONTROL DE EMPLEADOS</h4></div>
            <div class="panel-body bg-gray">

                <form action="@Url.Action("Create","Empleados")" method="post" id="Validacion">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                <label class = "control-label col-md-2">Nombre del Empleado </label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.NombreEmpleado, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NombreEmpleado, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class = "control-label col-md-2">Apellido del Empleado </label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ApellidoEmpleado, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ApellidoEmpleado, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.DUI, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.DUI, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.DUI, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.NIT, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.NIT, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NIT, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.FechaNacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.FechaNacimiento, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FechaNacimiento, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value=" Guardar" class="btn btn-primary" />
                                </div>
                            </div>
                        </div>
                    }
                </form>


            </div>
        </div>
        <div>
            @Html.ActionLink(" Atras", "Index", null, new { @class = "fa fa-mail-reply btn btn-success" })
        </div>
    </div>
@section Validar{
    <script type="text/javascript">
        $("#Validacion").validate({
            rules: {
                NombreEmpleado: {
                    required: true
                },

                ApellidoEmpleado: {
                    required: true
                },
                FechaNacimiento: {
                    required: true,
                    date:true
                }

            }
        });
    </script>
    <script>
        //Date picker
        $('#FechaNacimiento').datepicker({
            autoclose: true
        });
   //     $("#edad").keydown(function(event) {
	  //  // Permitir tecla espaciadora y back espace
	  //  if (event.keyCode == 46 || event.keyCode == 8) {
	  //    // permitor no hacer nada
	  //  } else {
	  //    // Previniendo el precionado de caracteres por el código de carácter
	  //    if (event.keyCode < 48 || event.keyCode > 57) {
	  //      event.preventDefault();
	  //    }
	  //  }
	  //});
		$('#DUI').on('keydown', function(event) {
	    if (event.keyCode == 8 || event.keyCode == 37 || event.keyCode == 39) {
	      // ignorando tecla espacio y las de desplazamiento
	    } else {
	      // validar el dui
	      inputval = $(this).val();
	      var string = inputval.replace(/[^0-9]/g, "");
	      var bloque1 = string.substring(0, 8);
	      var string = (bloque1 + "-");
	      $(this).val(string);
	    }
        });
        $('#Telefono').on('keydown', function(event) {
			if (event.keyCode == 8 || event.keyCode == 37 || event.keyCode == 39) {
				// ignore tecla espaciadora y las de desplazamiento
			} else {
				// validando un numero de telefono
				inputval = $(this).val();
				var string = inputval.replace(/[^0-9]/g, "");
				var area = string.substring(0, 3);
				var bloc1 = string.substring(3, 6);
				var bloc2 = string.substring(6, 10);
				var string = ("(" +  + ") " + bloc1 + "-" + bloc2);
				$(this).val(string);
			}
		});

    </script>
    }
